plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.lalala'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(":common-module:common")
	implementation project(":common-module:common-mvc")

	// Spring MVC
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Reactor Test
	testImplementation 'io.projectreactor:reactor-test'

	// Spring JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Dedis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	// Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Encryption
	implementation 'org.springframework.security:spring-security-crypto'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.0'

	// OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'

	// Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Open Tracing
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

	// Logback for LogStash
	implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildDockerImage {
	dependsOn bootJar

	doLast {
		exec {
			workingDir '.'
			commandLine 'docker','run','--privileged','--rm','tonistiigi/binfmt','--install','all'
		}
		exec {
			workingDir '.'
			commandLine 'docker','buildx','create','--use'
		}
		exec {
			workingDir '.'
			commandLine 'docker','buildx', 'build','--platform=linux/amd64,linux/arm64', '-t', "smilegatewannabe/user", '--build-arg', "RELEASE_VERSION=null", '.', '--push'
		}
	}
}
